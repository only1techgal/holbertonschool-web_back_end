"""
This module provides an asynchronous coroutine to collect random numbers.

The coroutine `async_comprehension` uses async comprehension to collect
10 random numbers generated by `async_generator` and returns them.
"""

from typing import List
from async_generator import async_generator


async def async_comprehension() -> List[float]:
    """
    Collects 10 random numbers using async comprehension.

    This coroutine consumes numbers generated asynchronously by async_generator
    and collects them into a list using async comprehension.

    Returns:
    List[float]: A list of 10 random floating-point numbers.
    """
    return [num async for num in async_generator()]
